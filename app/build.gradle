apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.firebase.appdistribution'

def props = new Properties()
def secretFile = rootProject.file("secrets/keys.properties")
if (secretFile.exists())
    secretFile.withInputStream { props.load(it) }

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId "kpfu.itis.myservice"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode appVersionCode.toInteger()
        versionName appVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            keyAlias props.getProperty('keyAlias')
            keyPassword props.getProperty('keyPassword')
            storeFile file("$rootDir/secrets/myservice-keystore")
            storePassword props.getProperty('storePassword')
        }
    }
    androidExtensions {
        experimental = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            firebaseAppDistribution {
                releaseNotesFile="$rootDir/release-data/release-notes.txt"
                testersFile="$rootDir/release-data/testers.txt"
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    implementation 'androidx.navigation:navigation-fragment-ktx:2.0.0'
//    implementation 'androidx.navigation:navigation-ui-ktx:2.0.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.navigation:navigation-fragment:2.0.0'
    implementation 'androidx.navigation:navigation-ui:2.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'

//  Rounded ImageView
    def rounded_image_view_version = "2.3.0"
    implementation "com.makeramen:roundedimageview:$rounded_image_view_version"

//  Recycler
    def recycler_version = "1.1.0"
    implementation "androidx.recyclerview:recyclerview:$recycler_version"

//  CardView
    def card_view_version = "1.0.0"
    implementation "androidx.cardview:cardview:$card_view_version"

//  Glide or Picasso
    def picasso_version = "1.1.0"
    def glide_version = "4.11.0"
    implementation "com.jakewharton.picasso:picasso2-okhttp3-downloader:$picasso_version"
    implementation "com.github.bumptech.glide:glide:$glide_version"

//  VK
//    def vk_androidsdk_version = "1.6.5"
    def vk_androidsdk_version = "2.1.1"
    implementation "com.vk:androidsdk:$vk_androidsdk_version"

//  Coroutines
    def coroutines_version = "1.3.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

//  RxJava
    def rxjava2_rxandroid_version = "2.0.0"
    def rxjava2_rxkotlin_version = "2.1.0"
    def rxjava2_retrofit_version = "1.0.0"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxjava2_rxandroid_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxjava2_rxkotlin_version"
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$rxjava2_retrofit_version"

//  Retrofit and Okhttp
    def retrofit_version = "2.6.4"
    def okHttp3_version = "3.12.8"
    def okHttp_version = "2.5.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttp3_version"
    implementation "com.squareup.okhttp3:okhttp:$okHttp3_version"
    implementation "com.squareup.okhttp:okhttp:$okHttp_version"

//  Gson
    def gson_version = "2.8.6"
    implementation "com.google.code.gson:gson:$gson_version"

//  Dagger 2
    def dagger_version = "2.27"
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

//  Room
    def room_version = "2.2.3"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    //firebase
    implementation "com.google.firebase:firebase-core:18.0.2"
    implementation 'com.google.firebase:firebase-firestore:21.4.3'
    implementation 'de.aaronoe:rxfirestorekt:0.1.1'

    //Card view
    implementation 'androidx.cardview:cardview:1.0.0'

    //WorkManager
    def work_version = "2.3.4"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    implementation "androidx.work:work-rxjava2:$work_version"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
apply plugin: 'com.google.gms.google-services'
configurations {
    all*.exclude group: 'com.google.guava', module: 'listenablefuture'
}
